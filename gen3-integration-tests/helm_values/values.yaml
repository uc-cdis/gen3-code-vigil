global:
  hostname:
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/anvil/master/schema.json
  aws:
    awsAccessKeyId: test
    awsSecretAccessKey: test #pragma: allowlist secret
    region: us-east-1

secrets:
  awsAccessKeyId: test
  awsSecretAccessKey: test #pragma: allowlist secret

fence:
  image:
    repository: quay.io/cdis/fence
    pullPolicy: IfNotPresent
    tag: '2025.01'

  usersync:
    usersync: true
    userYamlS3Path: s3://local-helm-testing/user.yaml
    # we do not want usersync to interrupt test flow
    # so it is set to run on the 1st of January if it is a Monday
    schedule: '0 0 1 1 1'
    syncFromDbgap: false
    env:
      - name: AWS_ACCESS_KEY_ID
        value: test
      - name: AWS_SECRET_ACCESS_KEY
        value: test
      - name: AWS_ENDPOINT_URL
        value: 'http://localstack.localstack.svc.cluster.local:4566'
      - name: AWS_DEFAULT_REGION
        value: 'us-east-1'

  FENCE_CONFIG:
    ENABLE_AUDIT_LOGS:
      presigned_url: true
      login: true
    LOGIN_REDIRECT_WHITELIST: [".", "/login"]
    PUSH_AUDIT_LOGS_CONFIG:
      type: aws_sqs
      aws_sqs_config:
        sqs_url: http://localstack.localstack.svc.cluster.local:4566/000000000000/audit-service-sqs
        region: us-east-1
        aws_cred: 'cdistest'
    AWS_CREDENTIALS:
      cdistest:
        aws_access_key_id: test
        aws_secret_access_key: test #pragma: allowlist secret
    S3_BUCKETS:
      cdis-presigned-url-test:
        region: 'us-east-1'
        cred: 'cdistest'
        endpoint_url: 'http://localstack.localstack.svc.cluster.local:4566'
      gen3-helm-data-upload-bucket:
        region: 'us-east-1'
        cred: 'cdistest'
        endpoint_url: 'http://localstack.localstack.svc.cluster.local:4566'
    DATA_UPLOAD_BUCKET: 'gen3-helm-data-upload-bucket'
    LOGIN_OPTIONS:
    - name: 'Login from Google'
      desc: 'description'
      idp: google
      #secondary: True
    - name: 'RAS Login'
      idp: ras
    MOCK_GOOGLE_AUTH: true
    HTTP_PROXY:
      host: 'cloud-proxy.internal.io'
      port: 3128
    ENABLED_IDENTITY_PROVIDERS:
      default: google
      providers:
        google:
          name: Login from Google

hatchery:
  image:
    tag: master
  hatchery:
    containers:
    - target-port: 8888
      cpu-limit: '0.5'
      memory-limit: 1Gi
      name: "(Tutorial) Bacpac Synthetic Data Analysis Notebook"
      image: "quay.io/cdis/heal-notebooks:bacpac__10670ad79b4488cfa9f1b3681ce52bc3f1139b5a"
      env:
        FRAME_ANCESTORS: https://{{ .Values.global.hostname }}
      args:
      - "--NotebookApp.base_url=/lw-workspace/proxy/"
      - "--NotebookApp.password=''"
      - "--NotebookApp.token=''"
      - "--NotebookApp.quit_button=False"
      command:
      - start-notebook.sh
      path-rewrite: "/lw-workspace/proxy/"
      use-tls: 'false'
      ready-probe: "/lw-workspace/proxy/"
      lifecycle-post-start:
      - "/bin/sh"
      - "-c"
      - export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; rm -rf /home/$IAM/pd/lost+found;
        ln -s /data /home/$IAM/pd/; true
      user-uid: 1000
      fs-gid: 100

portal:
  resources:
    requests:
      cpu: "0.2"
      memory: 100Mi
  image:
    repository: quay.io/cdis/data-portal
    tag: master
  gitops:
    json: |
      {
        "argoTemplate": "gwas-template",
        "graphql": {
          "boardCounts": [
          ],
          "chartCounts": [
          ],
          "projectDetails": "boardCounts"
        },
        "useArboristUI": true,
        "showArboristAuthzOnProfile": true,
        "showFenceAuthzOnProfile": false,
        "componentToResourceMapping": {
          "Workspace": {
            "resource": "/workspace",
            "method": "access",
            "service": "jupyterhub"
          },
          "Query": {
            "resource": "/query_page",
            "method": "access",
            "service": "query_page"
          },
          "Send Queries": {
            "resource": "/query_page",
            "method": "access",
            "service": "query_page"
          },
          "Data Dictionary": {
            "resource": "/dictionary_page",
            "method": "access",
            "service": "dictionary_page"
          },
          "Dictionary": {
            "resource": "/dictionary_page",
            "method": "access",
            "service": "dictionary_page"
          }
        },
        "components": {
          "appName": "BloodPAC Metadata Submission Portal",
          "index": {
            "introduction": {
              "heading": "BloodPAC Data Commons",
              "text": "The Blood Profiling Atlas in Cancer (BloodPAC) supports the management, analysis and sharing of liquid biopsy data for the oncology research community and aims to accelerate discovery and development of therapies, diagnostic tests, and other technologies for cancer treatment and prevention. The data commons supports cross-project analyses by harmonizing data from different projects through the collaborative development of a data dictionary, providing an API for data queries and download, and providing a cloud-based analysis workspace with rich tools and resources.",
              "link": "/submission"
            },
            "homepageChartNodes": [{
                "node": "subject",
                "name": "Subjects"
              }
            ],
            "buttons": [{
                "name": "Data Dictionary",
                "icon": "data-field-define",
                "body": "The BloodPAC Data Commons employs a data model to power queries and data submissions. Study the dictionary to send GraphQL queries or format your data submissions.",
                "link": "/DD",
                "label": "Learn more"
              },
              {
                "name": "Submit Data",
                "icon": "data-submit",
                "body": "Browse the list of submitted data projects, or find your project and submit data.",
                "link": "/submission",
                "label": "Submit data"
              },
              {
                "name": "Explore Data",
                "icon": "data-files",
                "body": "The Exploration app enables faceted search for cohort building, getting file download manifests, and browsing data across projects.",
                "link": "/explorer",
                "label": "Exploration"
              },
              {
                "name": "Send Queries",
                "icon": "data-access",
                "body": "Build and send your own custom GraphQL queries to the database to pinpoint specific data.",
                "link": "/query",
                "label": "Send Queries"
              },
              {
                "icon": "analysis",
                "link": "/analysis",
                "color": "#a2a2a2",
                "name": "Apps"
              }
            ]
          },
          "navigation": {
            "title": "BloodPAC Data Commons",
            "items": [
              {
                "icon": "query",
                "link": "/discovery",
                "name": "Discovery",
                "tooltip": "Use free-text search and tags to rapidly find relevant studies, discover new datasets across multiple resources, and easily export selected data files to the analysis workspace."
              },
              {
                "icon": "exploration",
                "link": "/explorer",
                "color": "#a2a2a2",
                "name": "Exploration"
              },
              {
                "icon": "query",
                "link": "/study-viewer/clinical_trials",
                "color": "#a2a2a2",
                "name": "Study Viewer"
              },
              {
                "icon": "workspace",
                "link": "/workspace",
                "color": "#a2a2a2",
                "name": "Workspace"
              },
              {
                "icon": "dictionary",
                "link": "/DD",
                "color": "#a2a2a2",
                "name": "Dictionary"
              },
              {
                "icon": "analysis",
                "link": "/analysis",
                "color": "#a2a2a2",
                "name": "Apps"
              },
              {
                "icon": "query",
                "link": "/query",
                "color": "#a2a2a2",
                "name": "Query"
              },
              {
                "icon": "profile",
                "link": "/identity",
                "color": "#a2a2a2",
                "name": "Profile"
              }
            ]
          },
          "topBar": {
            "items": [{
                "link": "https://bloodpac.org/",
                "name": "About"
              },
              {
                "icon": "upload",
                "link": "/submission",
                "name": "Submit Data"
              },
              {
                "link": "https://www.synapse.org/#!Synapse:syn8011461/wiki/411591",
                "name": "Documentation"
              },
              {
                "link": "bpa-support@gen3.org",
                "name": "Email Support"
              }
            ],
            "useProfileDropdown": false
          },
          "login": {
            "title": "BloodPAC Data Commons",
            "subTitle": "Explore, Analyze, and Share Data",
            "text": "This website combines liquid biopsy data from academic, government, and industry partners and aims to accelerate discovery and development of therapies, diagnostic tests, and other technologies for the treatment and prevention of cancer.",
            "contact": "If you have any questions about access or the registration process, please contact ",
            "email": "bpa-support@gen3.org"
          },
          "certs": {
            "security_quiz": {
              "hasCorrectAnswers": true,
              "title": "BloodPAC User agreement",
              "description": "",
              "questions": [{
                "name": "",
                "question": "NOTICE:  To protect the system from unauthorized use and to ensure that the system is functioning, activities on this system are monitored and recorded and subject to audit.  Use of this system is express consent to such monitoring and recording.  Any unauthorized access or use of this system is prohibited.  You may only use this system if you have been designated as an Authenticated Individual by your company or institution.  You may not use the system in any way that is inconsistent with the agreements between CCSR and your company or institution. Please pay particular attention to the restrictions on controlled access data and transfer it in an approved secure manner.",
                "options": ["I agree"],
                "answer": 0,
                "hint": "Click on I agree"
              }]
            }
          }
        },
        "featureFlags": {
          "explorer": true,
          "analysis": true,
          "explorerPublic": true,
          "discovery": true,
          "discoveryUseAggMDS": true,
          "studyRegistration": true
        },
        "analysisTools": [
          {
            "title": "OHDSI Atlas",
            "description": "Use this App for cohort creation. These will be automatically populated in the Gen3 GWAS App",
            "applicationUrl": "https://atlas.qa-mickey.planx-pla.net/atlas/",
            "image": "/custom/sponsors/gitops-sponsors/atlas-logo.png"
          },
          {
            "appId": "GWASUIApp",
            "title": "Gen3 GWAS",
            "description": "Use this App to perform high throughput GWAS on Million Veteran Program (MVP) data, using the University of Washington Genesis pipeline",
            "image": "/src/img/analysis-icons/gwas.svg",
            "needsTeamProject": true
          },
          {
            "appId": "GWASResults",
            "title": "GWAS Results",
            "description": "Use this App to view status & results of submitted workflows",
            "image": "/src/img/analysis-icons/gwasResults.svg",
            "needsTeamProject": true
          }
        ],
        "discoveryConfig": {
          "features": {
            "advSearchFilters": {
              "enabled": false,
              "field": "advSearchFilters",
              "filters": [
                { "key": "Research Focus Area" },
                { "key": "Administering IC(s)" },
                { "key": "Simulated vs. Real Data" },
                { "key": "Year Grant Awarded" },
                { "key": "Study Description" }
              ]
            },
            "exportToWorkspace": {
              "enabled": true,
              "manifestFieldName": "__manifest",
              "downloadManifestButtonText": "Download",
              "enableDownloadManifest": false,
              "downloadZipButtonText": "Download Zip",
              "enableDownloadZip": true
            },
            "pageTitle": {
              "enabled": false
            },
            "search": {
              "searchBar": {
                "enabled": true,
                "searchableTextFields": [
                  "summary",
                  "location",
                  "study_name",
                  "institutions",
                  "investigators",
                  "project_title",
                  "project_number",
                  "dataset_1_title",
                  "dataset_2_title",
                  "dataset_3_title",
                  "dataset_4_title",
                  "administering_ic",
                  "research_program",
                  "research_question",
                  "dataset_description",
                  "dataset_1_description",
                  "dataset_2_description",
                  "dataset_3_description",
                  "dataset_4_description",
                  "data_dictionary"
                ]
              }
            },
            "authorization": {
              "enabled": true,
              "supportedValues": {
                "accessible": {
                  "enabled": true,
                  "menuText": "Accessible"
                },
                "unaccessible": {
                  "enabled": true,
                  "menuText": "Not Accessible"
                },
                "pending": {
                  "enabled": false
                },
                "notAvailable": {
                  "enabled": false
                }
              }
            }
          },
          "aggregations": [
              {
                  "name": "Studies",
                  "field": "project_number",
                  "type": "count"
              }
          ],
          "tagSelector": {
            "title": "Tags by category",
            "showTagCategoryNames": true
          },
          "studies": [],
          "studyColumns": [
            {
              "name": "Project Title",
              "field": "project_title",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a"
            },
            {
              "name": "Research Focus Area",
              "field": "research_focus_area",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a"
            },
            {
              "name": "Investigator(s)",
              "field": "investigators",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a"
            }
          ],
          "studyPreviewField": {
            "name": "Summary",
            "field": "summary",
            "contentType": "string",
            "includeName": false,
            "includeIfNotAvailable": true,
            "valueIfNotAvailable": "No summary has been provided for this study."
          },
          "studyPageFields": {
            "header": {
              "field": "project_title"
            },
            "fieldsToShow": [
              {
                "groupName": "HEAL Research Initiatives",
                "groupWidth": "full",
                "includeName": false,
                "fields": [
                  {
                    "name": "Project Number",
                    "field": "project_number"
                  },
                  {
                    "name": "Research Focus Area",
                    "field": "research_focus_area"
                  },
                  {
                    "name": "Research Program",
                    "field": "research_program"
                  },
                  {
                    "name": "Research Question",
                    "field": "research_question"
                  }
                ]
              },
              {
                "groupName": "Host Institution",
                "groupWidth": "half",
                "includeName": false,
                "fields": [
                  {
                    "name": "Institution(s)",
                    "field": "institutions"
                  },
                  {
                    "name": "Location",
                    "field": "location"
                  },
                  {
                    "name": "Investigator(s)",
                    "field": "investigators"
                  },
                  {
                    "name": "Administering IC(s)",
                    "field": "administering_ic"
                  },
                  {
                    "name": "Year Grant Awarded",
                    "field": "year_awarded"
                  }
                ]
              },
              {
                "groupName": "Clinical Trial",
                "groupWidth": "half",
                "includeName": false,
                "fields": [
                  {
                    "name": "Study Type",
                    "field": "study_type"
                  },
                  {
                    "name": "Study Name",
                    "field": "study_name"
                  },
                  {
                    "name": "Study Description",
                    "field": "study_description"
                  },
                  {
                    "name": "Number of Subjects",
                    "field": "subjects"
                  },
                  {
                    "name": "Number of Sites",
                    "field": "sites"
                  },
                  {
                    "name": "Clinical Trial Link",
                    "field": "clinical_trial_link"
                  },
                  {
                    "name": "Protocol Name",
                    "field": "protocol_name"
                  },
                  {
                    "name": "Dataset Description",
                    "field": "dataset_description"
                  },
                  {
                    "name": "Dataset Category",
                    "field": "dataset_category"
                  }
                ]
              },
              {
                "groupName": "Tags",
                "includeName": false,
                "groupWidth": "full",
                "fields": [
                  {
                    "name": "Tags",
                    "field": "tags",
                    "contentType": "tags",
                    "includeIfNotAvailable": false
                  }
                ]
              },
              {
                "groupWidth": "full",
                "fields": [
                  {
                    "name": "Summary",
                    "field": "summary",
                    "contentType": "paragraphs",
                    "includeName": true,
                    "includeIfNotAvailable": true,
                    "valueIfNotAvailable": "No summary has been provided for this study."
                  }
                ]
              },
              {
                "groupName": "Datasets",
                "groupWidth": "full",
                "includeName": false,
                "fields": [
                  {
                    "name": "Dataset 1 - Title",
                    "field": "dataset_1_title"
                  },
                  {
                    "name": "Dataset 1 - Description",
                    "field": "dataset_1_description"
                  },
                  {
                    "name": "Dataset 1 - Type",
                    "field": "dataset_1_type"
                  },
                  {
                    "name": "Dataset 2 - Title",
                    "field": "dataset_2_title"
                  },
                  {
                    "name": "Dataset 2 - Description",
                    "field": "dataset_2_description"
                  },
                  {
                    "name": "Dataset 2 - Type",
                    "field": "dataset_2_type"
                  },
                  {
                    "name": "Dataset 3 - Title",
                    "field": "dataset_3_title"
                  },
                  {
                    "name": "Dataset 3 - Description",
                    "field": "dataset_3_description"
                  },
                  {
                    "name": "Dataset 3 - Type",
                    "field": "dataset_3_type"
                  },
                  {
                    "name": "Dataset 4 - Title",
                    "field": "dataset_4_title"
                  },
                  {
                    "name": "Dataset 4 - Description",
                    "field": "dataset_4_description"
                  },
                  {
                    "name": "Dataset 4 - Type",
                    "field": "dataset_4_type"
                  },
                  {
                    "name": "Dataset 5 - Title",
                    "field": "dataset_5_title"
                  },
                  {
                    "name": "Dataset 5 - Description",
                    "field": "dataset_5_description"
                  },
                  {
                    "name": "Dataset 5 - Type",
                    "field": "dataset_5_type"
                  }
                ]
              }
            ]
          },
          "minimalFieldMapping": {
            "authzField": "authz",
            "tagsListFieldName": "tfags",
            "dataAvailabilityField": "data_availability",
            "uid": "project_number"
          },
          "tagCategories": [
            {
              "name": "Demographic Info",
              "color": "rgba(64, 34, 100, 1)",
              "display": true
            },
            {
              "name": "Study Design",
              "color": "rgba(153, 40, 107, 1)",
              "display": true
            },
            {
              "name": "HEAL Specific",
              "color": "rgba(161, 36, 46, 1)",
              "display": true
            },
            {
              "name": "Other",
              "color": "rgba(207, 54, 38, 1)",
              "display": true
            },
            {
              "name": "Commons",
              "displayName": "Data Resources",
              "color": "rgba(21, 6, 76, 1)"
            }
          ]
        },
        "studyViewerConfig": [
          {
          "dataType": "subject",
          "title": "Studies",
          "titleField": "project_id",
          "rowAccessor": "submitter_id",
          "listItemConfig": {
            "blockFields": ["project_id"],
            "tableFields": ["data_type"]
          },
          "fieldMapping": [
            { "field": "category", "name": "Study Type"},
            { "field": "project_id", "name": "Project_ID"},
            { "field": "data_type", "name": "Data_Type"},
            { "field": "condition", "name": "Condition"}
          ],
          "openMode": "close-all",
          "buttons": [
            {
              "type": "download"
            },
            {
              "type": "request_access",
              "resourceDisplayNameField": "title",
              "accessRequestedText": "DAR In Progress",
              "accessRequestedTooltipText": "Your recently submitted DAR is being reviewed by NIAID"
            }]
          }
        ],
        "explorerConfig": [
        {
          "tabTitle": "Data",
          "charts": {
            "project_id": {
              "chartType": "count",
              "title": "Projects"
            }
          },
          "filters": {
            "tabs": [
              {
                "title": "Project",
                "fields": [
                  "project_id",
                  "data_type",
                  "data_format"
                ]
              }
            ]
          },
          "table": {
            "enabled": true,
            "fields": [
              "project_id",
              "data_format"
            ]
          },
          "dropdowns": {
            "download": {
              "title": "Download"
            }
          },
          "buttons": [
            {
              "enabled": true,
              "type": "export",
              "title": "Export All to Terra",
              "rightIcon": "external-link"
            },
            {
              "enabled": true,
              "type": "export-to-seven-bridges",
              "title": "Export All to Seven Bridges",
              "rightIcon": "external-link"
            },
            {
              "enabled": true,
              "type": "export-to-pfb",
              "title": "Export to PFB",
              "leftIcon": "datafile",
              "rightIcon": "download"
            },
            {
              "enabled": true,
              "type": "export-to-workspace",
              "title": "Export to Workspace",
              "leftIcon": "datafile",
              "rightIcon": "download"
            }
          ],
          "guppyConfig": {
            "dataType": "subject",
            "nodeCountTitle": "Subjects",
            "fieldMapping": [
              { "field": "disease_id", "name": "Disease ID" },
              { "field": "age_of_onset", "name": "Age of Onset" },
              { "field": "project_dbgap_accession_number", "name": "Project dbGaP Accession Number" },
              { "field": "project_dbgap_consent_text", "name":"Project dbGaP Consent Text"},
              { "field": "project_dbgap_phs", "name":"Project dbGaP Phs"}
            ],
            "manifestMapping": {
              "resourceIndexType": "file",
              "resourceIdField": "object_id",
              "referenceIdFieldInResourceIndex": "_subject_id",
              "referenceIdFieldInDataIndex": "_subject_id"
            },
            "accessibleFieldCheckList": [
              "project_id"
            ],
            "accessibleValidationField": "project_id"
          },
          "getAccessButtonLink": "https://dbgap.ncbi.nlm.nih.gov/",
          "terraExportURL": "https://terra.biodatacatalyst.nhlbi.nih.gov/#import-data",
          "terraTemplate": [
            "bdc",
            "gen3"
          ],
          "sevenBridgesExportURL": "https://platform.sb.biodatacatalyst.nhlbi.nih.gov/import/windmill"
        },
        {
          "tabTitle": "File",
          "charts": {
            "data_type": {
              "chartType": "stackedBar",
              "title": "File Type"
            },
            "data_format": {
              "chartType": "stackedBar",
              "title": "File Format"
            }
          },
          "filters": {
            "tabs": [
              {
                "title": "File",
                "fields": [
                  "project_id",
                  "data_category",
                  "data_type",
                  "data_format"
                ],
                "searchFields": [
                  "file_name"
                ]
              }
            ]
          },
          "table": {
            "enabled": true,
            "fields": [
              "project_id",
              "file_name",
              "file_size",
              "object_id"      ]
          },
          "guppyConfig": {
            "dataType": "file",
            "fieldMapping": [
              {
                "field": "object_id",
                "name": "GUID"
              },
              {
                          "field": "programs_name",
                          "name": "Program"
                      }
            ],
            "nodeCountTitle": "Files",
            "manifestMapping": {
              "resourceIndexType": "subject",
              "resourceIdField": "_subject_id",
              "referenceIdFieldInResourceIndex": "object_id",
              "referenceIdFieldInDataIndex": "object_id"
            },
            "accessibleFieldCheckList": [
              "project_id"
            ],
            "accessibleValidationField": "project_id",
            "downloadAccessor": "object_id"
          },
          "buttons": [
            {
              "enabled": true,
              "type": "file-manifest",
              "title": "Download Manifest",
              "leftIcon": "datafile",
              "rightIcon": "download",
              "fileName": "file-manifest.json",
              "dropdownId": "download"
            },
            {
              "enabled": true,
              "type": "export-files-to-workspace",
              "title": "Export to Workspace",
              "leftIcon": "datafile",
              "rightIcon": "download"
            },
            {
              "enabled": true,
              "type": "export-files-to-pfb",
              "title": "Export All to PFB",
              "rightIcon": "external-link"
            },
            {
              "enabled": true,
              "type": "export-files",
              "title": "Export All to Terra",
              "rightIcon": "external-link"
            },
            {
              "enabled": true,
              "type": "export-files-to-seven-bridges",
              "title": "Export All to Seven Bridges",
              "rightIcon": "external-link"
            }
          ],
          "terraExportURL": "https://terra.biodatacatalyst.nhlbi.nih.gov/#import-data",
          "terraTemplate": [
            "bdc",
            "gen3"
          ],
          "sevenBridgesExportURL": "https://platform.sb.biodatacatalyst.nhlbi.nih.gov/import/windmill",
          "enableLimitedFilePFBExport": {
            "sourceNodeField": "source_node"
          },
          "dropdowns": {}
        },
        {
            "tabTitle": "Imaging Studies",
            "charts": {},
            "filters": {
                "tabs": [
                {
                    "title": "Study Properties",
                    "searchFields": [
                    "study_uid"
                    ],
                    "fields": [
                    "study_modality",
                    "study_description",
                    "age_at_imaging",
                    "study_year",
                    "study_year_shifted",
                    "body_part_examined",
                    "days_from_study_to_pos_covid_test",
                    "days_from_study_to_neg_covid_test",
                    "project_id"
                    ]
                }
                ]
            },
            "table": {
                "enabled": true,
                "fields": [
                "submitter_id",
                "study_uid",
                "case_ids",
                "object_id",
                "project_id"
                ],
                "dicomViewerId": "submitter_id",
                "dicomViewerUrl": "ohif-viewer",
                "linkFields": [
                "submitter_id"
                ]
            },
            "dropdowns": {
                "download-table": {
                "title": "Download Table"
                }
            },
            "buttons": [
                {
                "enabled": true,
                "type": "data-json",
                "title": "JSON",
                "dropdownId": "download-table",
                "leftIcon": "datafile",
                "rightIcon": "download",
                "fileName": "Imaging_Studies_table.json"
                },
                {
                "enabled": true,
                "type": "data-tsv",
                "title": "TSV",
                "dropdownId": "download-table",
                "leftIcon": "datafile",
                "rightIcon": "download",
                "fileName": "Imaging_Studies_table.tsv"
                },
                {
                "enabled": true,
                "type": "data-csv",
                "title": "CSV",
                "dropdownId": "download-table",
                "leftIcon": "datafile",
                "rightIcon": "download",
                "fileName": "Imaging_Studies_table.csv"
                },
                {
                "enabled": true,
                "type": "manifest",
                "title": "Download File Manifest for Imaging Studies",
                "leftIcon": "datafile",
                "rightIcon": "download",
                "fileName": "imaging_study_manifest.json"
                },
                {
                "enabled": false,
                "type": "export-to-workspace",
                "title": "Export to Workspace",
                "leftIcon": "datafile",
                "rightIcon": "download"
                }
            ],
            "loginForDownload": true,
            "guppyConfig": {
                "dataType": "imaging_study",
                "nodeCountTitle": "Imaging Studies",
                "fieldMapping": [
                {
                    "field": "project_id",
                    "name": "Project ID"
                },
                {
                    "field": "study_uid",
                    "name": "Study UID"
                },
                {
                    "field": "submitter_id",
                    "name": "Browse in DICOM viewer"
                },
                {
                    "field": "case_ids",
                    "name": "Patient ID"
                }
                ],
                "manifestMapping": {
                "resourceIndexType": "data_file",
                "resourceIdField": "object_id",
                "referenceIdFieldInResourceIndex": "_imaging_study_id",
                "referenceIdFieldInDataIndex": "_imaging_study_id",
                "useFilterForCounts": false
                },
                "accessibleFieldCheckList": [
                "project_id"
                ],
                "accessibleValidationField": "project_id"
            }
        }
        ]
      }

etl:
  enabled: true
  image:
    tube:
      repository: quay.io/cdis/tube
      tag: master
  etlMapping:
    mappings:
      - name: ci.planx-ci.io_subject
        doc_type: subject
        type: aggregator
        root: subject
        props:
          - name: submitter_id
          - name: project_id
          - name: sex
          - name: age_value
          - name: ancestry
          - name: disease_description
          - name: phenotype_present
          - name: phenotype_absent
          - name: disease_id
          - name: solve_state
          - name: congenital_status
          - name: age_of_onset
          - name: phenotype_group
          - name: anvil_project_id
    #    flatten_props:
        aggregated_props:
          - name: sample_provider
            path: samples
            src: sample_provider
            fn: set
          - name: tissue_affected_status
            path: samples
            src: tissue_affected_status
            fn: set
          - name: tissue_type
            path: samples
            src: tissue_type
            fn: set
          - name: sample_type
            path: samples
            src: sample_type
            fn: set
          - name: original_material_type
            path: samples
            src: original_material_type
            fn: set
          - name: exome_capture_platform
            path: samples.sequencings
            src: exome_capture_platform
            fn: set
          - name: library_prep_kit_method
            path: samples.sequencings
            src: library_prep_kit_method
            fn: set
          - name: capture_region_bed_file
            path: samples.sequencings
            src: capture_region_bed_file
            fn: set
          - name: reference_genome_build
            path: samples.sequencings
            src: reference_genome_build
            fn: set
          - name: sequencing_assay
            path: samples.sequencings
            src: sequencing_assay
            fn: set
          - name: alignment_method
            path: samples.sequencings
            src: alignment_method
            fn: set
          - name: data_processing_pipeline
            path: samples.sequencings
            src: data_processing_pipeline
            fn: set
          - name: _samples_count
            path: samples
            fn: count
          - name: _sequencings_count
            path: samples.sequencings
            fn: count
        joining_props:
          - index: file
            join_on: _subject_id
            props:
              - name: data_format
                src: data_format
                fn: set
              - name: data_type
                src: data_type
                fn: set
              - name: data_category
                src: data_category
                fn: set
              - name: file_count
                src: _file_id
                fn: count
        parent_props:
          - path: projects[project_code:code]
          - path: projects[project_name:name]
          - path: projects[project_dbgap_phs:dbgap_phs]
          - path: projects[project_dbgap_consent_text:dbgap_consent_text]
          - path: projects[project_short_name:short_name]
          - path: projects[project_dbgap_accession_number:dbgap_accession_number]
      - name: ci.planx-ci.io_file
        doc_type: file
        type: collector
        root: None
        category: data_file
        props:
          - name: project_id
          - name: submitter_id
          - name: object_id
          - name: md5sum
          - name: file_name
          - name: file_size
          - name: data_format
          - name: data_type
          - name: state
          - name: data_category
          - name: analyte_type
          - name: sequencing_assay
          - name: source_node
        injecting_props:
          subject:
            props:
              - name: _subject_id
                src: id
                fn: set
              - name: subject_submitter_id
                src: submitter_id
                fn: set
              - name: anvil_project_id
                src: anvil_project_id
                fn: set
              - name: sex
                src: sex
                fn: set
              - name: age_value
                src: age_value
                fn: set
              - name: ancestry
                src: ancestry
                fn: set
              - name: disease_description
                src: disease_description
                fn: set
              - name: phenotype_present
                src: phenotype_present
                fn: set
              - name: phenotype_absent
                src: phenotype_absent
                fn: set
              - name: disease_id
                src: disease_id
                fn: set
              - name: solve_state
                src: solve_state
                fn: set
              - name: congenital_status
                src: congenital_status
                fn: set
              - name: age_of_onset
                src: age_of_onset
                fn: set
              - name: phenotype_group
                src: phenotype_group
                fn: set

guppy:
  image:
    repository: quay.io/cdis/guppy
    tag: master
  enabled: true
  dbRestore: false
  indices:
  - index: ci_subject
    type: subject
  - index: ci_file
    type: file
  - index: ci_imaging_study
    type: imaging_study
  configIndex: ci_configs

indexd:
  image:
    repository: quay.io/cdis/indexd
    tag: master
  defaultPrefix: ""

metadata:
  image:
    repository: quay.io/cdis/metadata-service
    tag: '2024.11'
  enabled: true
  useAggMds: "True"
  aggMdsNamespace: default
  aggMdsConfig: |
    {
      "gen3_commons": {
        "HEAL": {
          "mds_url": "http://revproxy-service.default.svc.cluster.local",
          "commons_url": "http://revproxy-service.default.svc.cluster.local"
        }
      },
      "adapter_commons": {}
    }

sower:
  pelican:
    bucket: 'sower-bucket'
  image:
    repository: quay.io/cdis/sower
    tag: '2024.10'
  enabled: true
  serviceAccount:
    # -- (bool) Specifies whether a service account should be created.
    create: true
    # -- (map) Annotations to add to the service account.
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::000000000000:role/sower-jobs-role
    # -- (string) The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "sower-service-account"
  sowerConfig:
    - name: pelican-export
      action: export
      container:
        name: job-task
        image: quay.io/cdis/pelican-export:master
        pull_policy: Always
        env:
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url
          - name: GEN3_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: ROOT_NODE
            value: subject
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: host
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: database
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: password
          - name: SHEEPDOG
            valueFrom:
              secretKeyRef:
                name: indexd-service-creds
                key: sheepdog
          - name: AWS_ENDPOINT_URL
            value: "http://localstack.localstack.svc.cluster.local:4566"
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_ACCESS_KEY_ID
            value: test
          - name: AWS_SECRET_ACCESS_KEY
            value: test
        volumeMounts:
          - name: pelican-creds-volume
            readOnly: true
            mountPath: "/pelican-creds.json"
            subPath: config.json
        cpu-limit: "1"
        memory-limit: 12Gi
      volumes:
        - name: pelican-creds-volume
          secret:
            secretName: pelicanservice-g3auto #pragma: allowlist secret
      restart_policy: Never
    - name: pelican-export-files
      action: export-files
      container:
        name: job-task
        image: quay.io/cdis/pelican-export:master
        pull_policy: Always
        env:
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url
          - name: GEN3_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: ROOT_NODE
            value: file
          - name: EXTRA_NODES
            value: ""
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: host
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: database
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: password
          - name: SHEEPDOG
            valueFrom:
              secretKeyRef:
                name: indexd-service-creds
                key: sheepdog
          - name: AWS_ENDPOINT_URL
            value: "http://localstack.localstack.svc.cluster.local:4566"
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_ACCESS_KEY_ID
            value: test
          - name: AWS_SECRET_ACCESS_KEY
            value: test
        volumeMounts:
          - name: pelican-creds-volume
            readOnly: true
            mountPath: "/pelican-creds.json"
            subPath: config.json
        cpu-limit: "1"
        memory-limit: 12Gi
      volumes:
        - name: pelican-creds-volume
          secret:
            secretName: pelicanservice-g3auto #pragma: allowlist secret
      restart_policy: Never
    - name: batch-export
      action: batch-export
      activeDealineSeconds: 600
      serviceAccountName: sower-service-account
      container:
        name: job-task
        image: quay.io/cdis/batch-export:master
        pull_policy: Always
        env:
          - name: BUCKET
            value: sower-bucket
          - name: GEN3_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: AWS_ENDPOINT_URL
            value: "http://localstack.localstack.svc.cluster.local:4566"
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_ACCESS_KEY_ID
            value: test
          - name: AWS_SECRET_ACCESS_KEY
            value: test
        cpu-limit: "1"
        memory-limit: 1Gi
      restart_policy: Never

ssjdispatcher:
  image:
    repository: quay.io/cdis/ssjdispatcher
    tag: '2024.10'
  enabled: true
  indexing: quay.io/cdis/indexs3client:master
  ssjcreds:
    sqsUrl: http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/gen3-helm-data-upload-bucket
    jobPattern: s3://test-12345678901234-upload/*
    jobUser: sheepdog_gen3
    metadataserviceUsername: metadata_gen3
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::000000000000:role/ssjdispatcher-role
    name: "ssjdispatcher-service-account"

sheepdog:
  image:
    repository: quay.io/cdis/sheepdog
    tag: 'bug_auth-audience'
  enabled: true
  authNamespace: ''

peregrine:
  image:
    repository: quay.io/cdis/peregrine
    tag: 'feat_jq-audience'
  enabled: true
  env:
    - name: AWS_ACCESS_KEY_ID
      value: test
    - name: AWS_SECRET_ACCESS_KEY
      value: test
    - name: AWS_ENDPOINT_URL
      value: 'http://localstack.localstack.svc.cluster.local:4566'
    - name: AWS_DEFAULT_REGION
      value: 'us-east-1'

requestor:
  image:
    repository: quay.io/cdis/requestor
    tag: '2024.10'
  enabled: true

audit:
  env:
    - name: ARBORIST_URL
      valueFrom:
       configMapKeyRef:
         name: manifest-global
         key: arborist_url
         optional: true
    - name: AWS_ACCESS_KEY_ID
      value: test
    - name: AWS_SECRET_ACCESS_KEY
      value: test
    - name: AWS_ENDPOINT_URL
      value: 'http://localstack.localstack.svc.cluster.local:4566'
    - name: AWS_DEFAULT_REGION
      value: 'us-east-1'

  image:
    repository: quay.io/cdis/audit-service
    tag: '2025.01'
  server:
    pull_from_queue: true
    debug: true
    sqs:
      region: us-east-1
      url: http://localstack.localstack.svc.cluster.local:4566/000000000000/audit-service-sqs
  enabled: true

ambassador:
  image:
    repository: quay.io/datawire/ambassador
    tag: '1.4.2'
  enabled: true

arborist:
  image:
    repository: quay.io/cdis/arborist
    tag: '2024.10'
  enabled: true

revproxy:
  ingress:
    enabled: true
    className: cloudflare-tunnel
    hosts:
      - host:
        paths:
          - path: /
            pathType: Prefix
    resources:
      requests:
        memory: "105Mi"
        cpu: "15m"

wts:
  image:
    repository: quay.io/cdis/workspace-token-service
    tag: '2024.10'
  enabled: true

manifestservice:
  image:
    repository: quay.io/cdis/manifestservice
    tag: "krishnaa05-patch-1"
  manifestserviceG3auto:
    bucketName: gen3-helm-manifest-bucket
    prefix: 'test'
    awsaccesskey: test
    awssecretkey: test #pragma: allowlist secret
  env:
    - name: AWS_ACCESS_KEY_ID
      value: test
    - name: AWS_SECRET_ACCESS_KEY
      value: test
    - name: AWS_ENDPOINT_URL
      value: 'http://localstack.localstack.svc.cluster.local:4566'
    - name: AWS_DEFAULT_REGION
      value: 'us-east-1'
    - name: REQUESTS_CA_BUNDLE
      value: /etc/ssl/certs/ca-certificates.crt
    - name: MANIFEST_SERVICE_CONFIG_PATH
      value: /var/gen3/config/config.json
    - name: GEN3_DEBUG
      value: "False"
