global:
  hostname:
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/anvil/master/schema.json
  aws:
    awsAccessKeyId: test
    awsSecretAccessKey: test #pragma: allowlist secret
    region: us-east-1

secrets:
  awsAccessKeyId: test
  awsSecretAccessKey: test #pragma: allowlist secret

arborist:
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  image:
    repository: "quay.io/cdis/arborist"
    tag: "master"

indexd:
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  defaultPrefix: ""
  enabled: true
  image:
    repository: "quay.io/cdis/indexd"
    tag: "master"

peregrine:
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  image:
    repository: "quay.io/cdis/peregrine"
    tag: "master"
    pullPolicy: Always
  env:
    - name: AWS_ACCESS_KEY_ID
      value: test
    - name: AWS_SECRET_ACCESS_KEY
      value: test
    - name: AWS_ENDPOINT_URL
      value: 'http://localstack.localstack.svc.cluster.local:4566'
    - name: AWS_DEFAULT_REGION
      value: 'us-east-1'

revproxy:
  ingress:
    enabled: true
    className: cloudflare-tunnel
    hosts:
      - host:
        paths:
          - path: /
            pathType: Prefix
    resources:
      requests:
        memory: "105Mi"
        cpu: "15m"
  image:
    repository: "quay.io/cdis/nginx"
    tag: "master"

sheepdog:
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  authNamespace: ''
  image:
    repository: "quay.io/cdis/sheepdog"
    tag: "master"

manifestservice:
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  image:
    repository: "quay.io/cdis/manifestservice"
    tag: "master"
  manifestserviceG3auto:
    bucketName: gen3-helm-manifest-bucket
    prefix: 'test'
    awsaccesskey: test
    awssecretkey: test #pragma: allowlist secret
  env:
    - name: AWS_ACCESS_KEY_ID
      value: test
    - name: AWS_SECRET_ACCESS_KEY
      value: test
    - name: AWS_ENDPOINT_URL
      value: 'http://localstack.localstack.svc.cluster.local:4566'
    - name: AWS_DEFAULT_REGION
      value: 'us-east-1'
    - name: REQUESTS_CA_BUNDLE
      value: /etc/ssl/certs/ca-certificates.crt
    - name: MANIFEST_SERVICE_CONFIG_PATH
      value: /var/gen3/config/config.json
    - name: GEN3_DEBUG
      value: "False"

sower:
  pelican:
    bucket: 'sower-bucket'
  image:
    repository: quay.io/cdis/sower
    tag: 'master'
  enabled: true
  serviceAccount:
    # -- (bool) Specifies whether a service account should be created.
    create: true
    # -- (map) Annotations to add to the service account.
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::000000000000:role/sower-jobs-role
    # -- (string) The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "sower-service-account"
  sowerConfig:
    - name: pelican-export
      action: export
      container:
        name: job-task
        image: quay.io/cdis/pelican-export:master
        pull_policy: Always
        env:
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url
          - name: GEN3_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: ROOT_NODE
            value: subject
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: host
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: database
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: password
          - name: SHEEPDOG
            valueFrom:
              secretKeyRef:
                name: indexd-service-creds
                key: sheepdog
          - name: AWS_ENDPOINT_URL
            value: "http://localstack.localstack.svc.cluster.local:4566"
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_ACCESS_KEY_ID
            value: test
          - name: AWS_SECRET_ACCESS_KEY
            value: test
        volumeMounts:
          - name: pelican-creds-volume
            readOnly: true
            mountPath: "/pelican-creds.json"
            subPath: config.json
        cpu-limit: "1"
        memory-limit: 12Gi
      volumes:
        - name: pelican-creds-volume
          secret:
            secretName: pelicanservice-g3auto #pragma: allowlist secret
      restart_policy: Never
    - name: pelican-export-files
      action: export-files
      container:
        name: job-task
        image: quay.io/cdis/pelican-export:master
        pull_policy: Always
        env:
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url
          - name: GEN3_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: ROOT_NODE
            value: file
          - name: EXTRA_NODES
            value: ""
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: host
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: database
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: password
          - name: SHEEPDOG
            valueFrom:
              secretKeyRef:
                name: indexd-service-creds
                key: sheepdog
          - name: AWS_ENDPOINT_URL
            value: "http://localstack.localstack.svc.cluster.local:4566"
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_ACCESS_KEY_ID
            value: test
          - name: AWS_SECRET_ACCESS_KEY
            value: test
        volumeMounts:
          - name: pelican-creds-volume
            readOnly: true
            mountPath: "/pelican-creds.json"
            subPath: config.json
        cpu-limit: "1"
        memory-limit: 12Gi
      volumes:
        - name: pelican-creds-volume
          secret:
            secretName: pelicanservice-g3auto #pragma: allowlist secret
      restart_policy: Never
    - name: batch-export
      action: batch-export
      activeDealineSeconds: 600
      serviceAccountName: sower-service-account
      container:
        name: job-task
        image: quay.io/cdis/batch-export:master
        pull_policy: Always
        env:
          - name: BUCKET
            value: sower-bucket
          - name: GEN3_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: AWS_ENDPOINT_URL
            value: "http://localstack.localstack.svc.cluster.local:4566"
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_ACCESS_KEY_ID
            value: test
          - name: AWS_SECRET_ACCESS_KEY
            value: test
        cpu-limit: "1"
        memory-limit: 1Gi
      restart_policy: Never

ssjdispatcher:
  image:
    repository: quay.io/cdis/ssjdispatcher
    tag: 'master'
  enabled: true
  indexing: quay.io/cdis/indexs3client:master
  ssjcreds:
    sqsUrl: http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/gen3-helm-data-upload-bucket
    jobPattern: s3://test-12345678901234-upload/*
    jobUser: sheepdog_gen3
    metadataserviceUsername: metadata_gen3
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::000000000000:role/ssjdispatcher-role
    name: "ssjdispatcher-service-account"

metadata:
  image:
    repository: quay.io/cdis/metadata-service
    tag: 'master'
  enabled: true
  useAggMds: "True"
  aggMdsNamespace: default
  aggMdsConfig: |
    {
      "gen3_commons": {
        "HEAL": {
          "mds_url": "http://revproxy-service.default.svc.cluster.local",
          "commons_url": "http://revproxy-service.default.svc.cluster.local"
        }
      },
      "adapter_commons": {}
    }

ambassador:
  enabled: true
  image:
    repository: "quay.io/datawire/ambassador"
    tag: "1.4.2"

wts:
  enabled: true
  image:
    repository: "quay.io/cdis/workspace-token-service"
    tag: "master"

hatchery:
  image:
    tag: master
  hatchery:
    containers:
    - target-port: 8888
      cpu-limit: '0.5'
      memory-limit: 1Gi
      name: "(Tutorial) Bacpac Synthetic Data Analysis Notebook"
      image: "quay.io/cdis/heal-notebooks:bacpac__10670ad79b4488cfa9f1b3681ce52bc3f1139b5a"
      env:
        FRAME_ANCESTORS: https://{{ .Values.global.hostname }}
      args:
      - "--NotebookApp.base_url=/lw-workspace/proxy/"
      - "--NotebookApp.password=''"
      - "--NotebookApp.token=''"
      - "--NotebookApp.quit_button=False"
      command:
      - start-notebook.sh
      path-rewrite: "/lw-workspace/proxy/"
      use-tls: 'false'
      ready-probe: "/lw-workspace/proxy/"
      lifecycle-post-start:
      - "/bin/sh"
      - "-c"
      - export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; rm -rf /home/$IAM/pd/lost+found;
        ln -s /data /home/$IAM/pd/; true
      user-uid: 1000
      fs-gid: 100

audit:
  env:
    - name: ARBORIST_URL
      valueFrom:
       configMapKeyRef:
         name: manifest-global
         key: arborist_url
         optional: true
    - name: AWS_ACCESS_KEY_ID
      value: test
    - name: AWS_SECRET_ACCESS_KEY
      value: test
    - name: AWS_ENDPOINT_URL
      value: 'http://localstack.localstack.svc.cluster.local:4566'
    - name: AWS_DEFAULT_REGION
      value: 'us-east-1'
  image:
    repository: quay.io/cdis/audit-service
    tag: '2025.01'
  server:
    pull_from_queue: true
    debug: true
    sqs:
      region: us-east-1
      url: http://localstack.localstack.svc.cluster.local:4566/000000000000/audit-service-sqs
  enabled: true

requestor:
  enabled: true
  image:
    repository: "quay.io/cdis/requestor"
    tag: "master"

dicom-viewer:
  enabled: true
  image:
    repository: "quay.io/cdis/ohif-viewer"
    tag: "master"

dicom-server:
  enabled: true
  image:
    repository: "quay.io/cdis/gen3-orthanc"
    tag: "master"
